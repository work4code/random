-- Banner update example --

[root@tower profile.d]# cat ansible-tower.sh
#!/bin/bash
# Ansible managed

echo ""
echo -e "  \E[1;34mWelcome to Ansible Tower!\E[0m"
echo ""
echo "  Log into the web interface here:"
echo ""
echo -e "    \E[1;31mhttps://10.42.0.42/\E[0m"
echo ""
echo "    Username: admin"
echo "    Password: My7XRKTuhsJL "
echo ""
echo "  The documentation for Ansible Tower is available here:"
echo ""
echo -e "    \E[1;31mhttp://www.ansible.com/tower/\E[0m"
echo ""
echo -e "  For help, visit  \E[1;31mhttp://support.ansible.com/\E[0m"
[root@tower profile.d]# pwd
/etc/profile.d
[root@tower profile.d]#


-- Vagrant build with shell example --

Example -1 

Vagrant.configure("2") do |config|
#  config.vm.box = "puppetlabs/centos-7.2-64-puppet"
  config.vm.provider "virtualbox" do |v|
    v.memory = 1024
    v.cpus = 1
  end
    config.vm.box = "puppetlabs/centos-7.2-64-puppet"
    config.vm.network "private_network", ip: "192.168.56.11"
    config.vm.hostname = "pup"
    config.vm.provision "shell", inline: <<-SHELL
    yum install vim-enhanced -y
    yum install tree -y
    yum install screen -y
    sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
SHELL
end

Example -2 

Vagrant.configure("2") do |config|
  config.vm.provider "virtualbox" do |v|
    v.memory = 1024
    v.cpus = 1
  end
    config.vm.box = "centos/7"
    config.vm.network "private_network", ip: "192.168.56.20"
    config.vm.hostname = "kub"
    config.vm.provision "shell", inline: <<-SHELL
        yum install vim-enhanced -y
        yum install tree -y
        yum install screen -y
        sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
SHELL
end

   config.vm.box = "centos/7"
      config.vm.network "private_network", ip: "192.168.56.21"
      config.vm.hostname = "node1"
      config.vm.provision "shell", inline: <<-SHELL
          yum install vim-enhanced -y
          yum install tree -y
          yum install screen -y
          sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
SHELL
end

     config.vm.box = "centos/7"
     config.vm.network "private_network", ip: "192.168.56.22"
     config.vm.hostname = "node2"
     config.vm.provision "shell", inline: <<-SHELL
     yum install vim-enhanced -y
     yum install tree -y
     yum install screen -y
     sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
SHELL
end

end

Example  - 3 

Vagrant.configure("2") do |config|
  config.vm.provider "virtualbox" do |v|
    v.memory = 1024
    v.cpus = 1
  end
  config.vm.define "kube" do |kub|
    kub.vm.box = "centos/7"
    kub.vm.network "private_network", ip: "192.168.56.20"
    kub.vm.hostname = "kub"
   end

  config.vm.define "node1" do |nd1|
    nd1.vm.box = "centos/7"
    nd1.vm.network "private_network", ip: "192.168.56.22"
    nd1.vm.hostname = "node1"
   end

  config.vm.define "node2" do |nd2|
    nd2.vm.box = "centos/7"
    nd2.vm.network "private_network", ip: "192.168.56.23"
    nd2.vm.hostname = "node2"
   end
end

Example - 3 

# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_NO_PARALLEL'] = 'yes'

Vagrant.configure(2) do |config|

  config.vm.provision "shell", path: "bootstrap.sh"

  # Kubernetes Master Server
  config.vm.define "kmaster" do |kmaster|
    kmaster.vm.box = "centos/7"
    kmaster.vm.hostname = "kmaster.example.com"
    kmaster.vm.network "private_network", ip: "172.42.42.100"
    kmaster.vm.provider "virtualbox" do |v|
      v.name = "kmaster"
      v.memory = 2048
      v.cpus = 2
      # Prevent VirtualBox from interfering with host audio stack
      v.customize ["modifyvm", :id, "--audio", "none"]
    end
    kmaster.vm.provision "shell", path: "bootstrap_kmaster.sh"
  end

  NodeCount = 2

  # Kubernetes Worker Nodes
  (1..NodeCount).each do |i|
    config.vm.define "kworker#{i}" do |workernode|
      workernode.vm.box = "centos/7"
      workernode.vm.hostname = "kworker#{i}.example.com"
      workernode.vm.network "private_network", ip: "172.42.42.10#{i}"
      workernode.vm.provider "virtualbox" do |v|
        v.name = "kworker#{i}"
        v.memory = 1024
        v.cpus = 1
        # Prevent VirtualBox from interfering with host audio stack
        v.customize ["modifyvm", :id, "--audio", "none"]
      end
      workernode.vm.provision "shell", path: "bootstrap_kworker.sh"
    end
  end

end


--sshd_config file --

cp /etc/ssh/sshd_config /etc/ssh/sshd_config.`date +%F`
cat > /etc/ssh/sshd_config<<'EOF'
AcceptEnv LANG LC_*
ChallengeResponseAuthentication no
GSSAPIAuthentication no
PermitRootLogin yes
PasswordAuthentication yes
PrintMotd yes
Subsystem sftp /usr/libexec/openssh/sftp-server
UseDNS no
UsePAM yes
X11Forwarding yes
EOF

--Banner Configuration Example --

->node banner
echo '#!/bin/bash' > /etc/profile.d/banner.sh
echo 'echo ""'  >> /etc/profile.d/banner.sh
echo 'echo -e "\E[1;34mWelcome to R&D $(uname -n)!\E[0m" '  >> /etc/profile.d/banner.sh
echo 'echo ""' >> /etc/profile.d/banner.sh

->master banner
echo '#!/bin/bash' > /etc/profile.d/banner.sh
echo 'echo ""'  >> /etc/profile.d/banner.sh
echo 'echo -e "\E[1;31mWelcome to Kube Master R&D $(uname -n)!\E[0m" '  >> /etc/profile.d/banner.sh
echo 'echo ""'  >> /etc/profile.d/banner.sh


[root@man ~]# cat /etc/profile.d/banner.sh
#!/bin/bash
# Puppet managed

echo ""
echo -e "  \E[1;31mWelcome to Puppet Master!\E[0m"
echo ""


[root@node1 ~]# cat /etc/profile.d/banner.sh
#!/bin/bash
# Ansible managed
echo ""
echo -e "  \E[1;34mWelcome to R&D node1!\E[0m"
echo ""


git hub  - 
https://github.com/apnex/nsx
https://github.com/apnex/hacking


SSH key gen- 
 ssh-keygen -f ~/.ssh/id_rsa -N '' 
